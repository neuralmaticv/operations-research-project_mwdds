from pulp import *


def ilp_solver(vertices_w, edges):
    """Solve the Minimum Weighted Directed Domination Set problem using the ILP solver.

    Args:
        vertices_w: A dictionary of vertices and their weights.
        edges: A list of edges.

    Returns:
        A tuple of the domination set and the objective value.

    !!! note

        The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
    """
    vertices = list(vertices_w.keys())

    model = LpProblem("Minimum Weighted Directed Domination Set", LpMinimize)

    x = LpVariable.dicts("x", vertices, lowBound=0, upBound=1, cat=LpInteger)

    model += lpSum([vertices_w[i] * x[i] for i in vertices])

    for v in vertices:
        constraint = x[v]
        for e in edges:
            if e[1] == v:
                constraint += x[e[0]]
        model += constraint >= 1

    time_limit_s = 600
    model.solve(PULP_CBC_CMD(msg=False, maxSeconds=time_limit_s))

    domination_set = []
    for i in vertices:
        if x[i].value() == 1:
            domination_set.append(i)

    objective_value = value(model.objective)

    return domination_set, objective_value
