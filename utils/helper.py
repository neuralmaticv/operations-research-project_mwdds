def get_successors(u, vertices, edges):
    """Remove adjacent nodes of the node u.

    Args:
        u: The node whose adjacent nodes should be removed.
        vertices: The list of vertices.
        edges: The list of edges.

    Returns:
        The list of adjacent nodes of the node u.

    !!! note

        The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
    """
    successors = []

    for v in vertices:
        if (u, v) in edges:
            successors.append(v)

    return successors


def remove_vertices(u, vertices, successors):
    """Remove vertices from a graph.

    Args:
        u: The vertex to remove
        vertices: The vertices of the graph
        successors: The successors of the vertex to remove

    Returns:
        The vertices of the graph without the removed vertices

    !!! note

        The above docstring is autogenerated by docstring-gen library (https://docstring-gen.airt.ai)
    """
    if isinstance(vertices, dict):
        for v in successors:
            vertices.pop(v)
        vertices.pop(u)
    else:
        for v in successors:
            vertices.remove(v)
        vertices.remove(u)

    return vertices
